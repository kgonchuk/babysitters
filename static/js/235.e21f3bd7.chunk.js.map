{"version":3,"file":"static/js/235.e21f3bd7.chunk.js","mappings":"wOAGO,MAAMA,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0KAS9BC,EAAcJ,EAAAA,GAAOK,OAAMC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,ubAalBI,EAAAA,EAAUC,WAAWC,KAEhCF,EAAAA,EAAUC,WAAWE,MAIRH,EAAAA,EAAUC,WAAWG,e,aCzB7C,MAkFA,EAlFkBC,IAAuB,IAAtB,aAAEC,GAAcD,EACjC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAsBC,IAA2BF,EAAAA,EAAAA,UAAS,IAEjEG,EAAAA,EAAAA,YAAU,KACR,MAeMC,GAAcC,EAAAA,EAAAA,IAAmBC,EAAAA,GAAOC,IACxCA,GAhBiBC,WACrB,IAAK,IAADC,EACF,MAAMC,EAAyB,QAAnBD,EAAGH,EAAAA,EAAKK,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBG,IACjC,GAAIF,EAAQ,CACV,MAAMG,QACGC,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcR,MACpD,GACFX,EAAiBc,GACjBM,QAAQC,IAAIP,EACd,CACF,CAAE,MAAOQ,GACPF,QAAQE,MAAM,mCAAoCA,EACpD,GAKEC,EACF,IAGF,MAAO,IAAMlB,GAAa,GACzB,IAEH,MAmBMmB,EAnBcC,EAACC,EAAOC,KAC1B,OAAQA,GACN,IAAK,SACH,OAAOD,EAAME,QAAQC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAKC,cAAcF,EAAEC,QAC7D,IAAK,SACH,OAAON,EAAMG,MAAK,CAACC,EAAGC,IAAMA,EAAEC,KAAKC,cAAcH,EAAEE,QACrD,IAAK,gBACH,OAAON,EAAMQ,QAAQC,GAAUA,EAAMC,eAAiB,KACxD,IAAK,mBACH,OAAOV,EAAMQ,QAAQC,GAAUA,EAAMC,eAAiB,KACxD,IAAK,UACH,OAAOV,EAAMQ,QAAQC,GAAUA,EAAME,OAAS,IAChD,IAAK,cACH,OAAOX,EAAMQ,QAAQC,GAAUA,EAAME,QAAU,IACjD,QACE,OAAOX,EACX,EAG4BD,CAAY1B,EAAeD,GAWzD,OACEwC,EAAAA,EAAAA,KAACtD,EAAiB,CAAAuD,SACkB,IAAjCf,EAAsBgB,QACrBF,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uDAGLE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CACGf,EACEI,MAAM,EAA0B,EAAvB1B,GACTwC,KAAI,CAACC,EAAcC,KAClBN,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CAAaV,MAAOQ,GAAdC,KAElBpB,EAAsBgB,OAAgC,EAAvBtC,IAC9BoC,EAAAA,EAAAA,KAACjD,EAAW,CAACyD,QAvBAC,KACrB,MAAMC,EACJxB,EAAsBgB,OAAgC,EAAvBtC,EAC3B+C,EAAkBC,KAAKC,IAAI,EAAGH,GACpC7C,GACGiD,GAA6BA,EAA2BH,GAC1D,EAiB4CV,SAAC,kBAI1B,E,MCjFQtD,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sKAAnC,MCiBP,EAbqBiE,KACnB,MAAOvD,EAAcwD,IAAmBrD,EAAAA,EAAAA,UAAS,YAIjD,OACEwC,EAAAA,EAAAA,MAAAc,EAAAA,SAAA,CAAAhB,SAAA,EACED,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,SAAO,KACfnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,eANgBC,IAC1BN,EAAgBM,EAAe,KAM7BtB,EAAAA,EAAAA,KAACuB,EAAS,CAACC,aAAchE,MACxB,C","sources":["components/Favorites/Favorite.styled.js","components/Favorites/Favorites.jsx","pages/FavoritePage/FavoritePage.styled.js","pages/FavoritePage/FavoritePage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { baseTheme } from \"styles/theme\";\n\nexport const CardListContainer = styled.div`\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    padding: 0 45px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 0 128px;\n  }\n`;\nexport const BtrLoadMore = styled.button`\n  box-sizing: border-box;\n  padding: 14px 40px;\n  font-size: 16px;\n  margin-top: 64px;\n  letter-spacing: -0.01em;\n  text-decoration: none;\n  border-radius: 30px;\n  display: flex;\n  flex-wrap: nowrap;\n  height: 48px;\n  width: 159px;\n  align-items: center;\n  background-color: ${baseTheme.background.main};\n  transition: box-shadow 0.3s ease;\n  color: ${baseTheme.background.white};\n  cursor: pointer;\n  margin: 0 auto;\n  &:hover {\n    background-color: ${baseTheme.background.secondaryMain};\n  }\n`;\n","import CardItem from \"components/CardItem/CardItem\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../../firebase/firebase\";\nimport { useEffect, useState } from \"react\";\nimport { BtrLoadMore, CardListContainer } from \"./Favorite.styled\";\n\nconst Favorites = ({ filterOption }) => {\n  const [favoriteCards, setFavoriteCards] = useState([]);\n  const [visibleFavoriteCards, setVisibleFavoriteCards] = useState(1);\n\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      try {\n        const userId = auth.currentUser?.uid;\n        if (userId) {\n          const storedFavorites =\n            (await JSON.parse(localStorage.getItem(`favorites-${userId}`))) ||\n            [];\n          setFavoriteCards(storedFavorites);\n          console.log(storedFavorites);\n        }\n      } catch (error) {\n        console.error(\"Error reading from localStorage:\", error);\n      }\n    };\n\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        fetchFavorites();\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const applyFilter = (cards, option) => {\n    switch (option) {\n      case \"A to Z\":\n        return cards.slice().sort((a, b) => a.name.localeCompare(b.name));\n      case \"Z to A\":\n        return cards.sort((a, b) => b.name.localeCompare(a.name));\n      case \"Less than 10$\":\n        return cards.filter((nanny) => nanny.price_per_hour < 10);\n      case \"Greater than 10$\":\n        return cards.filter((nanny) => nanny.price_per_hour > 10);\n      case \"Popular\":\n        return cards.filter((nanny) => nanny.rating > 4);\n      case \"Non popular\":\n        return cards.filter((nanny) => nanny.rating <= 4);\n      default:\n        return cards;\n    }\n  };\n\n  const filteredFavoriteCards = applyFilter(favoriteCards, filterOption);\n\n  const handleLoadMore = () => {\n    const remainingCards =\n      filteredFavoriteCards.length - visibleFavoriteCards * 3;\n    const newVisibleCards = Math.min(3, remainingCards);\n    setVisibleFavoriteCards(\n      (prevVisibleFavoriteCards) => prevVisibleFavoriteCards + newVisibleCards\n    );\n  };\n\n  return (\n    <CardListContainer>\n      {filteredFavoriteCards.length === 0 ? (\n        <div>\n          <p>No favorites yet. You can choose it in catalog.</p>\n        </div>\n      ) : (\n        <div>\n          {filteredFavoriteCards\n            .slice(0, visibleFavoriteCards * 3)\n            .map((favoriteCard, index) => (\n              <CardItem key={index} nanny={favoriteCard} />\n            ))}\n          {filteredFavoriteCards.length > visibleFavoriteCards * 3 && (\n            <BtrLoadMore onClick={handleLoadMore}>Load more</BtrLoadMore>\n          )}\n        </div>\n      )}\n    </CardListContainer>\n  );\n};\n\n//комент чек\nexport default Favorites;\n","import styled from \"styled-components\";\n\nexport const ContainerCatalog = styled.div`\n  margin: 0 auto;\n  box-sizing: border-box;\n  max-width: 1440px;\n  padding-left: 128px;\n  padding-bottom: 140px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import Filter from \"components/Filter/Filter\";\nimport Header from \"../../components/Header/Header\";\nimport { useState } from \"react\";\nimport Favorites from \"components/Favorites/Favorites\";\nimport { ContainerCatalog } from \"./FavoritePage.styled\";\n\nconst FavoritePage = () => {\n  const [filterOption, setFilterOption] = useState(\"Show all\");\n  const handleFilterChange = (selectedOption) => {\n    setFilterOption(selectedOption);\n  };\n  return (\n    <>\n      <Header BGColor />\n      <Filter onFilterChange={handleFilterChange} />\n      <Favorites filterOprion={filterOption} />\n    </>\n  );\n};\nexport default FavoritePage;\n"],"names":["CardListContainer","styled","div","_templateObject","_taggedTemplateLiteral","BtrLoadMore","button","_templateObject2","baseTheme","background","main","white","secondaryMain","_ref","filterOption","favoriteCards","setFavoriteCards","useState","visibleFavoriteCards","setVisibleFavoriteCards","useEffect","unsubscribe","onAuthStateChanged","auth","user","async","_auth$currentUser","userId","currentUser","uid","storedFavorites","JSON","parse","localStorage","getItem","concat","console","log","error","fetchFavorites","filteredFavoriteCards","applyFilter","cards","option","slice","sort","a","b","name","localeCompare","filter","nanny","price_per_hour","rating","_jsx","children","length","_jsxs","map","favoriteCard","index","CardItem","onClick","handleLoadMore","remainingCards","newVisibleCards","Math","min","prevVisibleFavoriteCards","FavoritePage","setFilterOption","_Fragment","Header","BGColor","Filter","onFilterChange","selectedOption","Favorites","filterOprion"],"sourceRoot":""}